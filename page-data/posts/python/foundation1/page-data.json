{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/python/foundation1","webpackCompilationHash":"152d9d801552e75a1bdf","result":{"data":{"markdownRemark":{"id":"53375367-aa0a-5059-beb0-9787d3a646a0","html":"<p>파이썬 홈페이지에선 파이썬 코딩 표준에 관한 문서를 정의해두었고, 기초를 익힌 후 참조하면 코딩스타일을 익히는데 많은 도움이 될 듯 하다<br>\n<a href=\"https://www.python.org/dev/peps/pep-0008\">파이썬 공식홈페이지 코딩스타일 정의</a></p>\n<h4 id=\"들여쓰기indentation\"><a href=\"#%EB%93%A4%EC%97%AC%EC%93%B0%EA%B8%B0indentation\" aria-label=\"들여쓰기indentation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들여쓰기(Indentation)</h4>\n<p>파이썬은 코딩블럭을 표시하기 위해 들여쓰기(Indentation)을 사용하며, 문장을 예로 들어보면 if, for, def 등 끝에 콜론(:)을 사용하면 내부 코딩블럭들은 동일한 들여쓰기를 사용해야 한다.<br>\n일반적으로 공백(스페이스) 4개를 사용하며, 모두 같은 들여쓰기를 쓰지 않고 하나만 5개의 공백을 사용하면 IndentationError가 발생한다.</p>\n<h4 id=\"표준-라이브러리\"><a href=\"#%ED%91%9C%EC%A4%80-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\" aria-label=\"표준 라이브러리 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>표준 라이브러리</h4>\n<p>파이썬은 표준라이브러리들을 제공하고 있는데, 불러다 사용하기 위해선 import문을 사용한다.  </p>\n<h4 id=\"comment\"><a href=\"#comment\" aria-label=\"comment permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Comment</h4>\n<p>코딩 외의 설명이나 기타 내용을 작성한 곳에서 사용하는데, 사용위치는 상관없지만, 보통 #사인 뒤에 하나의 공백을 두는 것을 권장한다.</p>\n<h4 id=\"기본-데이터-타입\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85\" aria-label=\"기본 데이터 타입 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 데이터 타입</h4>\n<p><code class=\"language-text\">int</code>           = 정수형<br>\n<code class=\"language-text\">float</code>         = 소수점을 포함한 실수<br>\n<code class=\"language-text\">bool</code>          = 참, 거짓을 표현<br>\n<code class=\"language-text\">None</code>          = Null과 같은 표현<br>\n<code class=\"language-text\">ComplexNumber</code> = a+bj(파이썬에선 j를 사용함)\na의 값을 얻기위해선 .real, b의값을 얻으려면 .imag  </p>\n<h4 id=\"포맷팅-연산자formatting-operator\"><a href=\"#%ED%8F%AC%EB%A7%B7%ED%8C%85-%EC%97%B0%EC%82%B0%EC%9E%90formatting-operator\" aria-label=\"포맷팅 연산자formatting operator permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>포맷팅 연산자(Formatting Operator)</h4>\n<p><code class=\"language-text\">%s</code>\t       문자열 (파이썬 객체를 str()을 사용하여 변환)<br>\n<code class=\"language-text\">%r</code>\t       문자열 (파이썬 객체를 repr()을 사용하여 변환)<br>\n<code class=\"language-text\">%c</code>\t       문자(char)<br>\n<code class=\"language-text\">%d</code> 또는 %i\t정수 (int)<br>\n<code class=\"language-text\">%f</code> 또는 %F\t부동소수 (float) (%f 소문자 / %F 대문자)<br>\n<code class=\"language-text\">%e</code> 또는 %E\t지수형 부동소수 (소문자 / 대문자)<br>\n<code class=\"language-text\">%g</code> 또는 %G\t일반형: 값에 따라 %e 혹은 %f 사용 (소문자 / 대문자)<br>\n<code class=\"language-text\">%o</code> 또는 %O\t8진수 (소문자 / 대문자)<br>\n<code class=\"language-text\">%x</code> 또는 %X\t16진수 (소문자 / 대문자)<br>\n<code class=\"language-text\">%%</code>\t       % 퍼센트 리터럴    </p>\n<h4 id=\"str-metod문자열-메서드\"><a href=\"#str-metod%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"str metod문자열 메서드 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Str Metod(문자열 메서드)</h4>\n<p><code class=\"language-text\">str.join()</code> 여러개의 문자열을 하나로 합쳐 줌<br>\n<code class=\"language-text\">str.split()</code> 특정 문자열을 괄호안의 기준으로 분리하여 리스트로 리턴<br>\n<code class=\"language-text\">str.format()</code> 문자열에 포함된 ’{}‘들의 값을 format()의 값으로 대입    </p>\n<h4 id=\"if-while-for\"><a href=\"#if-while-for\" aria-label=\"if while for permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>if, while, for</h4>\n<p><code class=\"language-text\">if</code> 주로 참과 거짓, 혹은 해당 값인지 확인하기 위해 사용됨<br>\n<code class=\"language-text\">while</code> 조건문이 거짓이 될때까지 계속 실행됨\n<code class=\"language-text\">for</code> 리스트, Tuple, 문자열 등의 인덱스를 하나하나 확인할 때 주로 사용됨( ex) for i in range(a):)<br>\n<code class=\"language-text\">range</code> 반복문과 연동되어 많이 사용됨</p>\n<h4 id=\"list\"><a href=\"#list\" aria-label=\"list permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List</h4>\n<p>Mutable 데이타 타입으로 여러 요소들을 갖는 집합체며, 추가, 수정, 삭제가 가능함<br>\nIndexing이란 a.[n]과 같이 리스트안의 특정 요소만을 선택하기 위해 사용됨 </p>\n<h4 id=\"list-method\"><a href=\"#list-method\" aria-label=\"list method permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List Method</h4>\n<p><code class=\"language-text\">slice</code> x = [처음 인덱스:마지막인덱스]와 같이 부분집합의 범위를 지정하여 필요한 데이터만 추출할 수 있음, 만약 처음 인덱스나 마지막 인덱스 중 한가지의 값이 공란으로도 사용가능함<br>\n<code class=\"language-text\">append</code> a.append()로 표현되며, 괄호안의 데이터를 a의 마지막 값을 추가 할 수 있음\n<code class=\"language-text\">del</code> del a[0]과 같이 사용되며, 리스트 중 0번째 데이터를 삭제할 수 있음<br>\na[1] = 11과 같이 값을 수정할 수도 있음   </p>\n<h4 id=\"list-기타\"><a href=\"#list-%EA%B8%B0%ED%83%80\" aria-label=\"list 기타 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List 기타</h4>\n<p><code class=\"language-text\">c = a + b</code> a와 b가 리스트라는 가정 하에 2개의 리스트를 하나의 리스트로 병합할 수 있음\n<code class=\"language-text\">x = a * 3</code> x에 a리스트를 3번 반복한 값을 저장함<br>\n<code class=\"language-text\">a = list.index(&#39;&#39;)</code> a변수에 list의 값 중 index괄호 안에 있는 값을 검색해서 저장함\n<code class=\"language-text\">a = list.count(&#39;&#39;)</code> a변수에 list의 값 중 count괄호 안에 있는 값이 몇번 나오는지 저장함\n<code class=\"language-text\">list = [for n in range(5)]</code> 리스트에 for문을 넣어 실행시킬수도 있음</p>\n<h4 id=\"tuple\"><a href=\"#tuple\" aria-label=\"tuple permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tuple</h4>\n<p>리스트와 유사하나 새로운값을 추가, 갱신, 삭제할 수 없다 => immutable 데이터 타입<br>\n<code class=\"language-text\">tu = (345,)</code> 만약 튜플의 요소가 하나일 경우 콤마를 사용하면 tuple값으로 저장됨</p>\n<h4 id=\"tuple-method\"><a href=\"#tuple-method\" aria-label=\"tuple method permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tuple Method</h4>\n<p>튜플의 값을 변경할 순 없지만, 튜플의 값을 다른 변수에 저장하여 사용할 수 있다.\n<code class=\"language-text\">a = tu[1]</code> 튜플값 중 인덱스가 1인 값을 a변수에 저장함\n<code class=\"language-text\">s = tu[1:]</code>  튜플 값 중 인덱스가 1인 값부터 마지막 값까지 s변수에 저장\n<code class=\"language-text\">c = a + b</code> a와 b가 모두 튜플일 때, c변수에 두개의 데이터를 저장\n<code class=\"language-text\">c = a * 3</code> 리스트와 마찬가지로 a튜플의 값을 3번 반복하여 c에 저장\n<code class=\"language-text\">a, b = (&#39;lee&#39;, &#39;sj&#39;)</code> a튜플에 ‘lee’, b튜플에 ‘sj’를 각각 저장 (lee, sj는 제 이름을 예시로 한것임)</p>\n<h4 id=\"dictionarydict\"><a href=\"#dictionarydict\" aria-label=\"dictionarydict permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dictionary(dict)</h4>\n<p>{키(Key):값(Value)} 쌍을 요소로 갖는 데이터 타입이며, 키를 이용해서 값을 빠르게 찾을 수 있는 hashtable 구조의 데이터이다. 또한, “dict”클래스로 구현되어 있으며, 키는 수정할 수 없는 immutable타입이어야 함 => 튜플은 키로 쓸 수 있는 반면 리스트는 사용할 수 없음</p>\n<h4 id=\"입력-추가-수정-삭제-읽기-등\"><a href=\"#%EC%9E%85%EB%A0%A5-%EC%B6%94%EA%B0%80-%EC%88%98%EC%A0%95-%EC%82%AD%EC%A0%9C-%EC%9D%BD%EA%B8%B0-%EB%93%B1\" aria-label=\"입력 추가 수정 삭제 읽기 등 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력, 추가, 수정, 삭제, 읽기 등</h4>\n<p><code class=\"language-text\">c = a[&#39;b&#39;]</code> a의 딕셔너리 중 b의 키를 가진 값을 c변수에 저장함\n<code class=\"language-text\">a[&#39;b&#39;] = c</code> c를 a딕셔너리 중 b의 키를 가진 값으로 수정함</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">a = [(&quot;A&quot;,1),(B,2)]\nc = dict(a)</code></pre></div>\n<p>or</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">a = (b=1,c=2)\nc = dict(a)</code></pre></div>\n<p>a의 값을 딕셔너리화하여 c에 저장함(만약 기존 데이터가 있다면, 각 키의 값들은 수정됨)</p>\n<p><code class=\"language-text\">a[&quot;b&quot;] = &quot;c&quot;</code> a딕셔너리 중 b의 키가 없다면 c를 값으로 추가함\n<code class=\"language-text\">del a[&quot;b&quot;]</code> a딕셔너리 중 b의 키를 삭제함(값도 같이 삭제됨)</p>\n<h4 id=\"dict-method\"><a href=\"#dict-method\" aria-label=\"dict method permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dict Method</h4>\n<p><code class=\"language-text\">dict.keys()</code> => “dict”에 저장된 키값들을 리턴<br>\n<code class=\"language-text\">dict.values()</code> => “dict”에 저장된 값들을 리턴<br>\n<code class=\"language-text\">dict.items()</code> => “dict”의 키와 값을 dict<em>items 객체로 리턴함(dict</em>items를 리스트로 변환하기 위해서는 list()를 사용하면 됨 ex) itemlist = list(items)<br>\n<code class=\"language-text\">dict.get(&quot;key&quot;)</code> => 키의 값을 리턴하는건 동일하지만, 키가 없을 경우 None을 리턴하므로 더 유용하게 사용할 수 있다.(<code class=\"language-text\">dict[&quot;key&quot;]</code>를 하게 될 경우 에러메세지가 출력됨)<br>\n<code class=\"language-text\">if &quot;key_name&quot; in dict:</code> => dict에 key_name이 있는지 확인<br>\n<code class=\"language-text\">dict.clear()</code> => dict의 키와 값을 모두 삭제</p>\n<p><code class=\"language-text\">dict.update({key_name1: value1, key_name2:value2})</code> => dict에서 key<em>name1,key</em>name2의 값을 각각 수정할 때 사용됨</p>","fields":{"slug":"/posts/python/foundation1","tagSlugs":["/tag/python-3/","/tag/wecode/","/tag/foundation/"]},"frontmatter":{"date":"2019-07-12T08:46:37.121Z","description":"Python 기초 문법 정리","tags":["Python3","Wecode","Foundation"],"title":"Python Foundation1"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/python/foundation1"}}}