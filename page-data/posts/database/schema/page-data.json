{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/database/schema","webpackCompilationHash":"b82d9b28d8528598d6d8","result":{"data":{"markdownRemark":{"id":"8b55aac9-910e-51aa-b287-fc841003101a","html":"<hr>\n<p>원래 데이터베이스 설계와 구축 등에 대해 포스팅 하려 했지만 설계 전에 스키마란게 뭔지 알고 싶어서 스키마부터 정리한 후 설계 부분을 요약해서 설명하고, 설계에 대한 자세한 얘기는 다음에 하려고 한다. 기본 개념을 아직 숙지못했다면 아래 블로그를 한번 보고 오는 걸 추천한다.</p>\n<p><a href=\"https://koreanblacklee.github.io/posts/database\">Database란?</a></p>\n<hr>\n<h3 id=\"스키마란\"><a href=\"#%EC%8A%A4%ED%82%A4%EB%A7%88%EB%9E%80\" aria-label=\"스키마란 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스키마란</h3>\n<ul>\n<li>데이터베이스에서 자료의 구조, 자료의 표현 방법, 자료 간의 관계를 형식 언어로 정의한 구조  </li>\n<li>스키마는 데이터베이스를 구성하는 데이터 개체(Entity), 속성(Attribute), 관계(Relationship) 및 데이터 조작 시 데이터 값들이 갖는 제약 조건 등에 관해 전반적으로 정의한다.    </li>\n<li>스키마는 사용자의 관점에 따라 외부 스키마, 개념 스키마, 내부 스키마로 나눠진다.<br>\n<strong>(생활코딩 이고잉님의 예시를 빌리자면, 엑셀에서 데이터를 입력할 때 마구잡이로 입력하는게 아닌, 항목을 정하고, 그 안에 해당하는 값을 넣으면서 정리를 한다. 한 열에 들어가야 하는 데이터가 숫자인지, 글자인지, 공란일 수 있는지 등등의 정의를 하는 것을 스키마라고 한다.)</strong></li>\n</ul>\n<p><strong>메타데이터</strong>: 어떠한 목적을 가지고 만들어진 데이터<br>\n<strong>Entity</strong>: 객체라는 의미로 유용한 정보를 저장하고 관리하기 위한 집합, 명사이며, 저장이 되기 위한 어떤 것을\n의미(==table)<br>\n<strong>Attribute</strong>: 테이블을 구성하는 데이터들 중 세로로 묶은 데이터셋을 의미함(개체의 속성)   </p>\n<p><strong>Relation</strong>: 개체 사이에 존재하는 관계에 대한 정의(동일한 구조로 이루어진 튜플의 집합을 말함)   </p>\n<p><strong>Tuple</strong>: 사전적의미로는 유한개의 사물의 순서있는 열거라고 한다.    </p>\n<p><img src=\"/media/1920px-Relational_database_terms.svg.png\" alt=\"데이터베이스 테이블 구조\">  </p>\n<p><a href=\"https://brunch.co.kr/@ambler/55\">Entity의 기본 개념</a></p>\n<h3 id=\"스키마의-3계층\"><a href=\"#%EC%8A%A4%ED%82%A4%EB%A7%88%EC%9D%98-3%EA%B3%84%EC%B8%B5\" aria-label=\"스키마의 3계층 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스키마의 3계층</h3>\n<p>데이터베이스 관리 시스템(DBMS)은 외부스키마에 따라 명시되고, 사용자의 요구를 개념적 스키마에 적합한 형태로 변경하고, 이를 다시 내부적 스키마에 적합현 형태로 변환한다.</p>\n<h4 id=\"외부스키마\"><a href=\"#%EC%99%B8%EB%B6%80%EC%8A%A4%ED%82%A4%EB%A7%88\" aria-label=\"외부스키마 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>외부스키마</h4>\n<ul>\n<li>사용자나 프로그래머가 각 개인의 입장에서 <strong>필요로 하는 데이터베이스의 논리적 구조</strong>를 정의함  </li>\n<li>전체 데이터베이스의 한 논리적인 부분으로 볼 수 있으므로 서브스키마(subschema)라고도 함  </li>\n<li>하나의 데이터베이스 시스템에는 <strong>여러 개의 외부 스키마</strong>가 존재할 수 있고, 하나의 외부스키마를 <strong>여러개의 프로그램이나 사용자가 공용</strong>할 수 있다.  </li>\n<li>같은 데이터베이스에 서로 다른 관점을 정의할 수 있도록 허용한다.  </li>\n<li>사용자는 <strong>질의어(SQL)을 사용</strong>하여 DB에 접근하여 사용한다.  </li>\n</ul>\n<h4 id=\"개념스키마\"><a href=\"#%EA%B0%9C%EB%85%90%EC%8A%A4%ED%82%A4%EB%A7%88\" aria-label=\"개념스키마 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개념스키마</h4>\n<ul>\n<li>데이터베이스의 전체적인 논리적 구조로서, 모든 프로그램이나 사용자들이 <strong>필요로 하는 데이터를 종합한 조직 전체의 데이터베이스</strong>로 하나만 존재한다.</li>\n<li>개체간의 관계나 <strong>제약조건</strong>을 나타내고, 데이터베이스의 <strong>접근 권한,</strong> 보안 및 <strong>무결성 규칙</strong>에 관한 명세를 정의</li>\n<li>데이터베이스 관리자에 의해 구성된다.</li>\n</ul>\n<h4 id=\"내부스키마\"><a href=\"#%EB%82%B4%EB%B6%80%EC%8A%A4%ED%82%A4%EB%A7%88\" aria-label=\"내부스키마 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내부스키마</h4>\n<ul>\n<li><strong>물리적 저장장치</strong> 입장에서 본 데이터베이스의 구조</li>\n<li>데이터베이스에 저장될 물리적인 구조를 정의하고, 저장 데이터 항목의 표현방법, 물리적 순서 등을 나타냄</li>\n<li>시스템 프로그래머나 시스템 설계자가 보는 관점의 스키마</li>\n<li>데이터베이스의 물리적인 구조</li>\n</ul>\n<h4 id=\"인덱스란\"><a href=\"#%EC%9D%B8%EB%8D%B1%EC%8A%A4%EB%9E%80\" aria-label=\"인덱스란 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인덱스란?</h4>\n<ul>\n<li>색인</li>\n<li><strong>DB에서 가장 빠르게 데이터를 찾아낼 수 있는 검색 방법</strong></li>\n<li>테이블에 대한 동작의 속도를 높여주는 자료 구조를 일컫는다고 함</li>\n<li>고속의 검색 동작뿐만 아니라 레코드 접근과 관련 효율적인 순서 매김 동작에 대한 기초를 제공한다.</li>\n<li>책으로 비유하자면 제일 앞장에 있는 목차가 될 수 있다.</li>\n<li>유니크한 값이 아닌 여러 중복된 데이터가 있을 경우 두개의 열을 가지고 데이터를 찾을 수 있다. 장고에서 사용하는 문구를 통해 예시를 들자면, 데이터베이스에 저장된 값 중 32살의 이승재를 찾고자 한다면,  <code class=\"language-text\">Model.objects.filter(name=&quot;이승재&quot;, age=32)</code>처럼 2개의 항목이름을 가지고 찾을 수 있음(물론 1개가 아닌 여러개 일수도 있음)</li>\n</ul>\n<h3 id=\"데이터베이스-설계란\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%84%A4%EA%B3%84%EB%9E%80\" aria-label=\"데이터베이스 설계란 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터베이스 설계란?</h3>\n<ul>\n<li>데이터베이스 설계의 주요 목적은 데이터의 의미를 정확하게 파악하고, 정보 요구사항에 대한 의사소통을 원할하게 하는 데 있다.</li>\n<li>설계과정은 다음과 같다.</li>\n</ul>\n<h3 id=\"요구조건-분석\"><a href=\"#%EC%9A%94%EA%B5%AC%EC%A1%B0%EA%B1%B4-%EB%B6%84%EC%84%9D\" aria-label=\"요구조건 분석 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요구조건 분석</h3>\n<p>사용자가 무엇의 정보를 필요로 하고 있는지, 문제가 무엇이며 문제를 어떻게 해결할지 등을 분석하여 어떤 데이터베이스를 만들어야 할 지를 결정하는 단계  </p>\n<h3 id=\"개념적-설계\"><a href=\"#%EA%B0%9C%EB%85%90%EC%A0%81-%EC%84%A4%EA%B3%84\" aria-label=\"개념적 설계 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개념적 설계</h3>\n<p>데이터베이스의 구성요소(속성)들을 정하고, 다음 단계인 논리적 설계에서 수행할 작업을 설계</p>\n<h3 id=\"논리적-설계\"><a href=\"#%EB%85%BC%EB%A6%AC%EC%A0%81-%EC%84%A4%EA%B3%84\" aria-label=\"논리적 설계 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>논리적 설계</h3>\n<p>본격적인 스키마 설계로, 이전 개념적 설계에서 만든 설계도를 사용자가 알아볼 수 있는 형태로 작업하는 것(제약조건 등을 해당 단계에서 제작)</p>\n<h3 id=\"물리적-설계\"><a href=\"#%EB%AC%BC%EB%A6%AC%EC%A0%81-%EC%84%A4%EA%B3%84\" aria-label=\"물리적 설계 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>물리적 설계</h3>\n<p>저장장치에 저장되는 형태의 알고리즘을 효율적이게 개선하고 수정하는 단계</p>\n<p>자세한 설명은 다음 블로그에 이어서 진행하거나 아래에 추가해서 작성할 예정이다.</p>\n<p>참고사이트:   </p>\n<p><a href=\"https://victorydntmd.tistory.com/125\">DB설계 개요</a>   </p>\n<p><a href=\"https://medium.com/@khwsc1/%EB%B2%88%EC%97%AD-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%AC%EC%A1%B0%EC%99%80-%EC%84%A4%EA%B3%84-%ED%8A%9C%ED%86%A0%EB%A6%AC%EC%96%BC-b25792a0aa86\">데이터 구조와 설계</a>    </p>\n<p><a href=\"https://galid1.tistory.com/424\">Database-설계 및 구축 예시</a></p>","fields":{"slug":"/posts/database/schema","tagSlugs":["/tag/database/","/tag/schema/","/tag/wecode/"]},"frontmatter":{"date":"2019-08-05T12:46:37.121Z","description":"Database","tags":["Database","schema","Wecode"],"title":"Database란?-2(schema)"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/database/schema"}}}